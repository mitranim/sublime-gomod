%YAML 1.2
---
# Syntax: sublimetext.com/docs/syntax.html
# Example: go.dev/ref/mod#go-mod-file

name: Go (MOD)
file_extensions: [go.mod]
first_line_match: |-
  (?xi:
    ^(module)\s+(.*[\/]?$\n?) # mod
  )
scope: source.mod

variables:
  number: '(?<!\/)(?<!\.)(v?[0-9][.]?){1,}(?:[+-]?[0-9a-z]){1,}'

contexts:
  main:
    - include: comment-single-line
    - include: keyword
    - include: path
    - include: section
    - include: punctuation

  comment-single-line:
    - match: //
      scope: punctuation.definition.comment.mod
      push:
        - meta_scope: comment.line.mod
        - match: $\n?
          pop: true

  keyword:
    - match: \b(go|module|require|exclude|replace|retract)\b
      scope: keyword.mod

  section:
    - match: (\(|\[)
      scope: punctuation.section.mod
      push:
        - include: path
        - include: comment-single-line
        - match: (\)|\])
          scope: punctuation.section.mod
          pop: true

  path:
    - match: '\b(?:([\w+-.\/]{1,}|)\b\s*?)({{number}})'
      captures:
        1: meta.path.mod
        2: constant.mod

  punctuation:
    - match: \(
      scope: punctuation.section.parens.begin.mod
    - match: \)
      scope: punctuation.section.parens.end.mod
    - match: \,
      scope: punctuation.delimiter.comma.mod
    - match: '=>'
      scope: punctuation.accessor.mod
    - match: \[
      scope: punctuation.section.brackets.begin.mod
    - match: \]
      scope: punctuation.section.brackets.end.mod
    - match: \.
      scope: punctuation.delimiter.period.dot.mod
