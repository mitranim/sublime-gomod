%YAML 1.2
---
# http://www.sublimetext.com/docs/syntax.html
version: 2
name: Go (Sum)
file_extensions:
  - [sum]
scope: source.go.sum
hidden: true
contexts:
  # Rule: main
  main:
    - match: "(?x)"
      push: main|0
  # Rule: main
  main|0:
    - match: "^"
      set: main|1
    - match: '\S'
      scope: invalid.illegal.go.sum
      pop: true
  # Rule: main
  main|1:
    - match: '(?:[^\s/()]|/(?!/))+'
      scope: ident.go.sum
      captures:
        1: variable.go.sum
      set: main|2
    - match: '\S'
      scope: invalid.illegal.go.sum
      pop: true
  # Rule: main
  main|10:
    - match: "(=)"
      set: main|11
    - match: '\S'
      scope: invalid.illegal.go.sum
      pop: true
  # Rule: main
  main|11:
    - match: '\s*'
      set: main|12
    - match: '\S'
      scope: invalid.illegal.go.sum
      pop: true
  # Rule: main
  main|12:
    - match: "$"
      pop: true
    - match: '\S'
      scope: invalid.illegal.go.sum
      pop: true
  # Rule: main
  main|2:
    - match: '\s+'
      set: main|3
    - match: '\S'
      scope: invalid.illegal.go.sum
      pop: true
  # Rule: main
  main|3:
    - match: '(v(?:0|[1-9]\d*)\.(?:0|[1-9]\d*)\.(?:0|[1-9]\d*)(?:-[\da-z-]+(?:\.[\da-z-]+)*)?(?:\+[\da-z-]+(?:\.[\da-z-]+)*)?)'
      scope: semver.go.sum
      captures:
        1: constant.numeric.complex.go.sum
      set: main|4
    - match: '\S'
      scope: invalid.illegal.go.sum
      pop: true
  # Rule: main
  main|4:
    - match: '(\-(?:\d{14}\.)?\d{14}\-[a-f0-9]{12})?'
      scope: version_checksum.go.sum
      captures:
        1: constant.language.go.sum
      set: main|5
    - match: '\S'
      scope: invalid.illegal.go.sum
      pop: true
  # Rule: main
  main|5:
    - match: '(\/go\.mod)?'
      scope: gomod_path.go.sum
      captures:
        1: constant.language.gosum.go.sum
      set: main|6
    - match: '\S'
      scope: invalid.illegal.go.sum
      pop: true
  # Rule: main
  main|6:
    - match: '\s+'
      set: main|7
    - match: '\S'
      scope: invalid.illegal.go.sum
      pop: true
  # Rule: main
  main|7:
    - match: '(h\d)'
      scope: algorithm.go.sum
      captures:
        1: support.type.go.sum
      set: main|8
    - match: '\S'
      scope: invalid.illegal.go.sum
      pop: true
  # Rule: main
  main|8:
    - match: '(\:)'
      set: main|9
    - match: '\S'
      scope: invalid.illegal.go.sum
      pop: true
  # Rule: main
  main|9:
    - match: '([a-zA-Z\d+\/]{43})'
      scope: checksum.go.sum
      captures:
        1: constant.language.go.sum
      set: main|10
    - match: '\S'
      scope: invalid.illegal.go.sum
      pop: true
  # Rule: prototype
  prototype:
    - match: '(//+).*\n?'
      scope: comment.line.go.sum
      captures:
        1: punctuation.definition.comment.go.sum
